"Regular high school diploma",
"GED or alternative credential",
"some college credit, no degree",
"some college credit, no degree",
"Associate's degree",
"Bachelor's degree",
"Master's degree",
"Professional degree",
"Doctorate degree")
psub$SCHL = as.factor(schlmap[psub$SCHL])
psub$SCHL = relevel(psub$SCHL, schlmap[1])
dtrain = subset(psub, ORIGRANDGROUP >= 500)
dtrain
dtest = subset(psub, ORIGRANDGROUP < 500)
dtest
summary(dtrain$COW)
summary(dtrain$SCHL)
custdata = read.table('https://github.com/WinVector/zmPDSwR/tree/master/Custdata/custdata.tsv',header=T,sep='\t')
custdata = read.table('/Users/nadelman/rwork/pract_ds_with_r/zmPDSwR/Custdata',header=T,sep='\t')
custdata = read.table('/Users/nadelman/rwork/pract_ds_with_r/zmPDSwR/Custdata/custdata.tsv',header=T,sep='\t')
custdata
summary(custdata)
summary(custdata$income)
summary(Income)
Income = custdata$income / 1000
summary(Income)
plot(custdata, custdata~age custdata~income)
library(ggplot2)
install.packages(ggplot2, dependencies="true")
install.packages("ggplot2")
library(ggplot2)
ggplot(custdata) + geom_histogram(aes(x=age), binwidths=5, fill="gray")
library(scales)
ggplot(custdata) + geom_density(aes(x=income)) + scale_x_continuous(labels=dollar)
ggplot(custdata) + geom_density(aes(x=inclome)) + scale_x_log10(breaks=x(100,1000,10000,100000), labels=dollar) + annotation_logticks(sides="bt")
ggplot(custdata) + geom_density(aes(x=inclome)) + scale_x_log10(breaks=c(100,1000,10000,100000), labels=dollar) + annotation_logticks(sides="bt")
ggplot(custdata) + geom_density(aes(x=income)) + scale_x_log10(breaks=c(100,1000,10000,100000), labels=dollar) + annotation_logticks(sides="bt")
ORIGRANDGROUP
ggplot(custdata) + geom_bar(aes(x=marital.stat), fill="gray")
ggplot(custdata) + geom_bar(aes(x=marital.stat), fill="white")
ggplot(custdata) + geom_bar(aes(x=marital.stat), fill="gray")
ggplot(custdata) + geom_bar(aes(x=state.of.res), fill="gray") + coord_flip() + theme(axis.text.y=element_text(size=rel(0.8)))
statesums <- table(custdata$state.of.res)
statesums
statef <- as.data.frame(statesums)
statef
colnames(statef) <- c("state.of.res", "count")
statef
summary(statef)
dhus <- dbGetQuery(con,'SELECT * FROM hus WHERE "ORIGRANDGROUP"<=1');
ggplot(statef)+ geom_bar(aes(x=state.of.res,y=count),
stat="identity", fill="gray") +
coord_flip() + theme(axis.text.y=element_text(size=rel(0.8)))
ggplot(statef)+ geom_bar(aes(x=state.of.res,y=count), stat="identity", fill="gray") coord_flip() + theme(axis.text.y=element_text(size=rel(0.8)))
ggplot(statef) + geom_bar(aes(x=state.of.res,y=count), stat="identity", fill="gray") + coord_flip() + theme(axis.text.y=element_text(size=rel(0.8)))
statef
statef <- transform(statef, state.of.res=reorder(state.of.res, count))
statef
dpus <- dbGetQuery(con,'SELECT pus.* FROM pus WHERE pus."SERIALNO" IN (SELECT DISTINCT hus."SERIALNO" FROM hus WHERE hus."ORIGRANDGROUP"<=1)');
statef <- transform(statef, state.of.res=reorder(count, state.of.res))
statef
statef <- as.data.frame(statesums)
summary(statef)
statef <- transform(statef, state.of.res=reorder(state.of.res, count))
colnames(statef)<-c("state.of.res", "count")
statef <- transform(statef, state.of.res=reorder(state.of.res, count))
statef
summary(statef)
ggplot(statef)+ geom_bar(aes(x=state.of.res,y=count), stat="identity", fill="gray") + coord_flip() + theme(axis.text.y=element_text(size=rel(0.8)))
x = runif(100)
y = x^2 + 0.2*x
ggplot(data.frame(x=x, y=y), aes(x=x, y=y)) + geom_line()
customdata2 <- subset(custdata, (custdata$age > 0 & custdata$age < 100 & custdata$income > 0))
customdata2
cor(custdata2$age, custdata2$income)
cor(customdata2$age, customdata2$income)
ggplot(customdata2, aes(x=age, y=income)) + geom_point + ylim(0,200000)
ggplot(customdata2, aes(x=age, y=income)) + geom_point() + ylim(0,200000)
ggplot(customdata2, aes(x=age, y=income)) + geom_point() + stat_smooth(method="lm") + ylim(0,200000)
ggplot(customdata2, aes(x=age, y=income)) + geom_point() + geom_smooth() + ylim(0,200000)
gglot(customdata2, aes(x=age, y=as.numeric(health.ins))) + geom_point(position=position_jitter(w-0.5, h=0.5)) + geom_smooth()
ggplot(customdata2, aes(x=age, y=as.numeric(health.ins))) + geom_point(position=position_jitter(w-0.5, h=0.5)) + geom_smooth()
ggplot(customdata2, aes(x=age, y=as.numeric(health.ins))) + geom_point(position=position_jitter(w=0.5, h=0.5)) + geom_smooth()
summary(customdata2)
ggplot(customdata2, aes(x=age, y=as.numeric(health.ins))) + geom_point(position=position_jitter(w=0.5, h=0.5)) + geom_smooth()
ggplot(customdata2, aes(x=age, y=as.numeric(health.ins))) + geom_point(position=position_jitter(w=0.5, h=0.5)) + geom_smooth()
temp <- table(customdata2$age, y=as.numeric(customdata2$health.ins)))
temp <- table(customdata2$age, y=as.numeric(customdata2$health.ins))
temp
temp <- table(customdata2$age, as.numeric(customdata2$health.ins))
temp
as.numeric(customdata2$health.ins)
ggplot(custdata2, aes(x=age, y=as.numeric(health.ins))) + geom_point(position=position_jitter(w=0.05, h=0.05)) + geom_smooth()
ggplot(customdata2, aes(x=age, y=as.numeric(health.ins))) + geom_point(position=position_jitter(w=0.05, h=0.05)) + geom_smooth()
ggplot(customdata2, aes(x=age, y=as.numeric(health.ins))) + geom_point(position=position_jitter(w=0.5, h=0.5)) + geom_smooth()
install package("hexbin")
install package(hexbin)
install("hexbin")
install.packages("hexbin")
library(hexbin)
cor
ggplot(custdata2, aes(x=age, y=income)) + geom_hex(binwidth=c(5, 10000)) + geom_smooth(color="white", se=F) + ylim(0,200000)
ggplot(customdata2, aes(x=age, y=income)) + geom_hex(binwidth=c(5, 10000)) + geom_smooth(color="white", se=F) + ylim(0,200000)
gggplot(customdata2) + geom_bar(aes(x=marital.stat, fill=health.ins))
ggplot(customdata2) + geom_bar(aes(x=marital.stat, fill=health.ins))
ggplot(customdata2) + geom_bar(aes(x=marital.stat, fill=health.ins, position="fill"))
ggplot(customdata2) + geom_bar(aes(x=marital.stat, fill=health.ins, position="dodge"))
ggplot(customdata2) + geom_bar(aes(x=marital.stat, fill=health.ins), position="dodge")
ggplot(customdata2) + geom_bar(aes(x=marital.stat, fill=health.ins), position="fill")
ggplot(customdata2) + geom_bar(aes(x=marital.stat, fill=martial.stat), position="dodge")
ggplot(customdata2) + geom_bar(aes(x=housing.type, fill=health.ins), position="fill")
ggplot(customdata2) + geom_bar(aes(x=housing.type, fill=health.ins), position="dodge")
ggplot(custdata2) + geom_bar(aes(x=housing.type, fill=marital.stat ), position="dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(customdata2) + geom_bar(aes(x=housing.type, fill=marital.stat ), position="dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
dpus
head(dpus)
dpus <- dbGetQuery(con,'SELECT pus.* FROM pus WHERE pus."SERIALNO" IN (SELECT DISTINCT hus."SERIALNO" FROM hus WHERE hus."ORIGRANDGROUP"<=1)');
# From: http://archive.ics.uci.edu/ml/datasets/Statlog+(German+Credit+Data)
vARS
vars
head(d)
table(d$Job, d$Savings.account.bonds)
head(table(d$Job, d$Savings.account.bonds))
head(table(d$Job, d$foreign.worker))
summary(d)
summary(mtcars)
attach(mtcars)
summary(mpg)
plot(mpg, disp)
plot(mpg, wt)
detach(mtcars)
plot(mpg, wt)
with(mtcars, {
summary(mpg, disp, wt)
plot(mpg, disp)
plot(mpg, wt)
})
source('~/rwork/ria/temp.R')
source('~/rwork/ria/temp.R')
testData = data.frame(personId=numeric(0), bmi=numeric(0), incentive.max=numeric(0), incentive.obtained=numeric(0), incentive.percentage=numeric(0), date=timestamp(0))
##------ 0 ------##
testData = data.frame(personId=numeric(0), bmi=numeric(0), incentive.max=numeric(0), incentive_obtained=numeric(0), incentive_percentage=numeric(0))
edit(testData)
library(xlsx)
library(RODBC)
install.packaged("RODBC","xlsx")
install.packages("RODBC","xlsx")
library(RODBC)
library(xlsx)
channel <- odbcConnectExcel("/Users/nadelman/rwork/ria/transactions_excel.xls")
library(xlsx)
install.packages("xlsx")
library(xlsx)
txnDataFrame <- read.xlsx("/Users/nadelman/rwork/ria/transactions_excel.xls", 1)
txnDataFrame
head(txnDataFrame)
help(head)
help(head,20)
head(txnDataFrame, 20)
plot(txnDataFrame$Category, txnDataFrame$Amount)
plot(txnDataFrame$Date, txnDataFrame$Amount)
plot(txnDataFrame$Date, txnDataFrame$Amount)
help(date)
txnDataFrame$Date <- as.Date(txnDataFrame$Date, "%m/%d/%Y")
plot(txnDataFrame$Date, txnDataFrame$Amount)
summary(txn)
install.packages('shiny')
library(shiny)
runExample("01_hello")
runExample("02_text")
ls()
attach(mtcars)
summary(mtcars)
plot(weight, mpg)
plot(st, mpg)
plot(wt, mpg)
abline(lm(mpg~wt))
abline(lm(wt~mpg))
title("Regression of MPG on Weight")
detach(mtcars)
boxplot(mtcars)
boxplot(mtcars$mpg)
boxplot(mtcars$mpg, mtcars$wt)
dose  <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
plot(dose, drugA, type="b" )
plot(dose, drugA, type="b", lty=2, pch=17)
plot(dose, drugA, type="b", pch=19, lty=2, col="red")
plot(dose, drugB, type="b", pch=23, lty=6, col="blue", bg="green")
plot(dose, drugA, type="b", lty=2, pch=17)
plot(dose, drugA, type="b", pch=19, lty=2, col="red")
plot(dose, drugB, type="b", pch=23, lty=6, col="blue", bg="green")
plot(dose, c(drugA, drugB))
help plot
plot(dose, drugA, type="b", pch=19, lty=2, col="red")
plot(dose, drugB, type="b", pch=23, lty=6, col="blue", bg="green")
lines(dose, drugA, type="b", pch=22, col="blue", lty=2)
lines(lm(dose~drugA))
abline(c(1..10))
abline(h=c(1..10))
abline(h=c(1,10,100))
abline(lm(dose~drugA))
attach(mtcars)
opar <- par(no.readonly=TRUE)
par(mfrow=c(3,1))
hist(wt)
hist(mpg)
hist(disp)
par(opar)
detach(mtcars)
manager <- c(1, 2, 3, 4, 5)
date <- c("10/24/08", "10/28/08", "10/1/08", "10/12/08", "5/1/09")
country <- c("US", "US", "UK", "UK", "UK")
gender <- c("M", "F", "F", "M", "F")
age <- c(32, 45, 25, 39, 99)
q1 <- c(5, 3, 3, 3, 2)
q2 <- c(4, 5, 5, 3, 2)
q3 <- c(5, 2, 5, 4, 1)
q4 <- c(5, 5, 5, NA, 2)
q5 <- c(5, 5, 2, NA, 1)
leadership <- data.frame(manager, date, country, gender, age,
q1, q2, q3, q4, q5, stringsAsFactors=FALSE)
leadership
leadership$age[leadership$age == 99] <- NA
leadership
leadership$agecat[leadership$age >= 75] <- "old"
leadership
leadership$agecat[leadership$age < 75 && leadership$age >=35] <- "middle age"
leadership
leadership$agecat[leadership$age < 75 & leadership$age >=35] <- "middle age"
leadership
leadership$agecat[leadership$age < 35] <- "young"
leadership
fix(leadership)
leadership
names(leadership)
runApp("App-1")
source('~/rwork/pract_ds_with_r/ch2/test1.R')
runApp("App-2")
swirl()
library(swirl)
swirl()
x <- c(44,5,NA)
x <- c(44,NA,5,NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
myData <- sample(x(y,z), 100)
myData <- sample(c(y,z), 100)
myNA <- is.na(myData)
myNA
myData == NA
sum(myNA)
myData
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(fool=11, bar=2, norf=NA)
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "var")]
vect[c("foo", "bar")]
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
library(swirl)
swirl
swirl()
myVector <- 1:20
myVector
dim(myVector)
length(myVector)
dim(myVector) <- c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix()
?matrix
myMatrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(myMatrix, myMatrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients, myMatrix)
myData <- data.frame(patients, myMatrix)
myData
class(myData)
cnames <- c("patient","age","weight","bp","rating","test")
?colnames
colnames(myData) <- cnames
myData
getwd()
setwd("/Users//nadelman/rwork//johnHopkins/programmingWithR/assignments/assignment1/")
ls()
ls
ls()
?ls
?rm
objects
objects()
rm(list = ls())
ls()
ls
d <- "specdata"
po <- "sulfate"
ids <- 1:332
?read.csv
finalId = formatC(id, width = 3, format = "d", flag = "0")
filePattern = paste(finalId, '.csv', sep = "")
finalFile = paste(directory, '/', finalId, '.csv', sep = ""
?for
ls()
?for()
?for
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate")
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate")
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate")
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate")
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate")
clear
clear()
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate")
?appedn
?append
temp <- read.csv("specdata/001.csv", header=TRUE)
temp
head(temp)
summary(temp)
temp$sulfate
temp$sulfate[!is.na(temp$sulfate)]
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate")
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate")
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/pollutantmean.R')
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/pollutantmean.R')
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate")
?mean
temp
?type
class(temp)
class(temp$sulfate)
sulf <- temp$sulfate
sulf
mean(sulf, na.rm=TRUE)
temp2 <- read.csv("specdata/002.csv", header=TRUE)
temp
temp2
summary(temp)
summary(temp2)
tempRunning <- c()
tempRunning
append(tempRunning, temp$sulfate)
tempRunning
tempRunning <- temp$sulfate
tempRunning
append(tempRunning, temp2$sulfate)
summary(tempRunning)
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate")
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 70:72)
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/pollutantmean.R')
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
?mean
?round
round(1.280833, 3)
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/pollutantmean.R')
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 70:72)
?matrix
?cbind
tempM <- matrix(nrow=0, ncol=2)
tempM
cbind(tempM, c(100,200))
tempM <- matrix(nrow=0, ncol=2)
rbind(tempM, c(100,200))
tempM
?data.frame
tempM <- rbind(tempM, c(200,300))
tempM <- rbind(tempM, c(200,400))
tempM <- rbind(tempM, c(200,500))
tempM
tempdf <- data.frame(tempM, row.names = c("id","nobs"))
tempdf <- data.frame(tempM)
tempdf
?names
names(tempdf) <- c("id","nobs")
tempdf
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/complete.R')
complete("specdata", 1)
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/complete.R')
complete("specdata", 1)
?sum
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/complete.R')
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", c(2, 4, 8, 10, 12))
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
data.frame(x= numeric(0), y= integer(0))
data.frame(id= numeric(0), nobs= integer(0))
tempdf <- data.frame(id= numeric(0), nobs= integer(0))
tempdf
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/complete.R')
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/complete.R')
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
omplete("specdata", 30:25)
complete("specdata", 30:25)
complete("specdata", 3)
source("submitscript1.R")
submit()
});
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/complete.R')
?cor
ls()
sulf
ls()
temp
cor(temp$sulfate, temp$nitrate, na.rm=TRUE)
cor(temp$sulfate, temp$nitrate, use="complete.obs")
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corr.R')
cr <- corr("specdata", 150)
list.files("specdata")
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corr.R')
cr <- corr("specdata", 150)
cr
head(cr)
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corr.R')
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corr.R')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corr.R')
cr <- corr("specdata", 150)
summary(cr)
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/pollutantmean.R')
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
